name: Run CI Build / Test / Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    strategy:
      matrix:
        node-versions: [14.x]

    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-east-1
        role-to-assume: arn:aws:iam::354178563115:role/Pray4uFrontendGithubActions
        role-session-name: Pray4uFrontendGithubDeploy

    - name: Install cypress dependencies
      run: sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Clone frontend
      uses: actions/checkout@v2
      with:
        path: ${{ github.workspace }}/frontend_repo

    - name: yarn install frontend
      run: npx yarn install --frozen-lockfile
      working-directory: ${{ github.workspace }}/frontend_repo

    - name: Clone backend
      uses: actions/checkout@v2
      with:
        repository: danBhentschel/pray4u-backend
        path: ${{ github.workspace }}/backend_repo

    - name: yarn install backend
      run: npx yarn install --frozen-lockfile
      working-directory: ${{ github.workspace }}/backend_repo

    - name: Backend serverless deploy to cypress
      run: npx serverless deploy --stage cypress
      working-directory: ${{ github.workspace }}/backend_repo

    - name: Frontend serverless deploy to cypress
      run: ./scripts/deploy.sh cypress
      working-directory: ${{ github.workspace }}/frontend_repo

    - name: Delete test user
      continue-on-error: true
      run: ./integration/delete_test_user.sh
      working-directory: ${{ github.workspace }}/backend_repo
      env:
        SERVERLESS_STAGE: cypress
        COGNITO_USERNAME: ${{ secrets.TEST_USERNAME }}

    - name: Wait for API Gateway
      run: npx ts-node integration/wait_for_api_to_be_ready.ts
      working-directory: ${{ github.workspace }}/backend_repo
      env:
        SERVERLESS_STAGE: cypress

    - name: Run cypress tests
      run: npx cypress run
      working-directory: ${{ github.workspace }}/frontend_repo
      env:
        CYPRESS_SERVERLESS_STAGE: cypress
        CYPRESS_COGNITO_USERNAME: ${{ secrets.TEST_USERNAME }}
        CYPRESS_COGNITO_PASSWORD: ${{ secrets.TEST_PASSWORD }}

    - name: Frontend serverless remove cypress
      if: always()
      run: npx serverless remove --stage cypress
      working-directory: ${{ github.workspace }}/frontend_repo

    - name: Backend serverless remove cypress
      if: always()
      run: npx serverless remove --stage cypress
      working-directory: ${{ github.workspace }}/backend_repo

    - name: Frontend serverless deploy to staging
      run: ./scripts/deploy.sh staging
      working-directory: ${{ github.workspace }}/frontend_repo


    
